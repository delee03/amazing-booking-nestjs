// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

datasource db {
  provider = "mongodb"
  url = env("MONGODB_URL")
}

generator client {
  provider = "prisma-client-js"
}


model User {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  email    String  @unique
  password String
  birthday DateTime?
  gender   Boolean
  phone    String
  avatar   String? // Trường avatar (dạng URL) có thể null
  role     Role    @default(USER)
  bookings Booking[]
  ratings  Rating[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Room {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String?
  soLuong     Int
  soKhach     Int
  tienNghi    String
  price       Float
  avatar       String
  location    Location @relation(fields: [locationId], references: [id])
  locationId  String   @db.ObjectId
  bookings    Booking[]
  images      RoomImage[]
  ratings     Rating[]
  address     String
  status      Boolean @default(true)
  type        String?
  longitude   String?
  latitude    String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Location {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  city String
  style String?
  country String
  longitude String?
  latitude String?
  rooms Room[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model RoomImage {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  url     String
  room    Room   @relation(fields: [roomId], references: [id], onDelete: Cascade)
  roomId  String @db.ObjectId
}

model Booking {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  checkIn   DateTime
  checkOut  DateTime
  totalPrice Float
  guests     Int
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @db.ObjectId
  room      Room     @relation(fields: [roomId], references: [id])
  roomId    String   @db.ObjectId
   paymentMethod  PaymentMethod  // Phương thức thanh toán
  paymentStatus  Boolean @default(false) // Trạng thái thanh toán
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Rating {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  content   String
  star      Int
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @db.ObjectId
  room     Room    @relation(fields: [roomId], references: [id])
  roomId   String   @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  USER
  ADMIN
}

enum PaymentMethod {
  BANK_TRANSFER
  MOMO
  CASH
  VNPAY
  PAYPAL
  OTHER
}

